
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

/ {
  behaviors {
    #include "macros.dtsi"
    #include "version.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
     &kp ESCAPE    &kp N1     &kp N2            &kp N3     &kp N4        &kp N5                   &kp N6              &mo 1         &kp N7   &kp N8     &kp N9           &kp N0  &kp MINUS     &kp BACKSPACE
        &kp TAB     &kp Q      &kp W             &kp E      &kp R         &kp T            &kp BACKSPACE  &kp DOUBLE_QUOTES          &kp Y    &kp U      &kp I            &kp O      &kp P         &kp EQUAL
        &kp TAB     &kp A      &kp S             &kp D      &kp F         &kp G                   &kp N6          &kp LCTRL      &kp ENTER                           &kp DELETE   &kp BSLH  &kp SINGLE_QUOTE     &kp H     &kp J   &kp K      &kp L  &kp SEMI  &kp ENTER
 &kp LEFT_SHIFT     &kp Z      &kp X             &kp C      &kp V         &kp B                    &none              &none       &kp LALT    &none      &none  &kp RIGHT_SHIFT      &none             &none     &kp N     &kp M  &kp UP  &kp COMMA   &kp DOT  &kp SLASH
       &kp LGUI  &kp LALT  &kp LCTRL  &kp SINGLE_QUOTE  &kp GRAVE  &kp LEFT_GUI                    &mo 1      &kp LG(SPACE)  &kp RG(SPACE)  &kp TAB  &kp SPACE         &kp LEFT   &kp DOWN         &kp RIGHT  &kp LBKT  &kp RBKT
            >;
        };

        layer_fn {
            bindings = <
 &bt BT_CLR        &kp F1                 &kp F2                    &kp F3                 &kp F4         &kp F5                 &kp F6        &none        &kp F7         &kp F8                  &kp F9        &kp F10        &kp F11       &kp F12
     &trans     &kp ENTER     &macro_find_usages  &kp LG(LS(SINGLE_QUOTE))  &kp LG(LS(SEMICOLON))  &kp LA(LS(U))            &bootloader  &bootloader        &trans  &macro_parens  &macro_double_yajirush  &macro_braces         &trans  &bt BT_SEL 0
     &trans  &macro_iterm  &macro_to_declaration             &macro_alfred          &macro_snipet         &trans                 &kp F6       &trans        &trans                                                &trans         &trans        &trans      &trans  &kp DOUBLE_QUOTES  &macro_single_yajirush  &macro_angle_brackets  &kp DOUBLE_QUOTES  &bt BT_SEL 1
     &trans        &trans                 &trans                    &trans           &macro_paste         &trans                  &none        &none        &trans          &none                   &none         &trans          &none         &none      &trans      &kp LESS_THAN             &kp PAGE_UP       &kp GREATER_THAN             &trans        &trans
     &trans        &trans                 &trans                    &trans          &macro_rename         &trans                 &trans       &trans  &kp CAPSLOCK       &kp BSLH                  &trans       &kp HOME  &kp PAGE_DOWN       &kp END  &bt BT_CLR       &out OUT_TOG
            >;
        };

        layer_Layer__2 {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

    };
};
